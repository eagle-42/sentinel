#!/usr/bin/env python3
"""
Script de test de validation des dÃ©cisions
VÃ©rifie que le systÃ¨me dÃ©tecte correctement les prix +15min
"""

import sys
from pathlib import Path

# Ajouter src au path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from gui.services.historical_validation_service import HistoricalValidationService

def main():
    """Teste la validation des dÃ©cisions"""
    print("\n" + "=" * 60)
    print("ðŸ§ª TEST VALIDATION DES DÃ‰CISIONS")
    print("=" * 60)
    
    service = HistoricalValidationService()
    
    # Tester avec SPY
    print("\nðŸ“Š Validation pour SPY (7 derniers jours)...")
    validation_summary = service.get_validation_summary("SPY", days=7)
    
    print(f"\nâœ… Status: {validation_summary.get('status')}")
    print(f"ðŸ“‹ Total dÃ©cisions: {validation_summary.get('total_decisions', 0)}")
    
    results = validation_summary.get('validation_results', [])
    print(f"ðŸ“Š RÃ©sultats validation: {len(results)}")
    
    if results:
        print("\n" + "-" * 60)
        print("DÃ‰TAIL DES DÃ‰CISIONS:")
        print("-" * 60)
        
        for i, result in enumerate(results, 1):
            print(f"\n{i}. {result.get('timestamp')}")
            print(f"   DÃ©cision: {result.get('decision')}")
            print(f"   Prix -15min: ${result.get('current_price', 0):.2f}")
            print(f"   Prix +15min: ${result.get('future_price', 0):.2f}")
            print(f"   Variation: {result.get('price_change', 0):.2f}%")
            print(f"   RÃ©sultat: {result.get('status', 'N/A')}")
    
    # Statistiques
    stats = validation_summary.get('summary_stats', {})
    if stats:
        print("\n" + "=" * 60)
        print("ðŸ“Š STATISTIQUES GLOBALES:")
        print("=" * 60)
        print(f"DÃ©cisions correctes: {stats.get('correct_decisions', 0)}/{stats.get('total_decisions', 0)}")
        print(f"Taux de rÃ©ussite: {stats.get('accuracy_rate', 0)*100:.1f}%")
    
    print("\n" + "=" * 60)
    print("âœ… TEST TERMINÃ‰")
    print("=" * 60)

if __name__ == "__main__":
    main()
